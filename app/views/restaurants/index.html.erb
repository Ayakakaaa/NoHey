<div class="flash-title">
  <p> NO HEY </p>
</div>


<div class="paddings">
<header class="header-restaurant">
  <% if can? :crud, @restaurant %>
    <%= link_to 'New Restaurant', new_restaurant_path, class: "new-restaurant" %>
  <% end %>

  <div class="search">
    <% if @tag.present? %>
        <h6>
            Showing restaurants tagged by 
            <span class="badge badge-pill badge-primary">
                <%= @tag.name %>
            </span>
        </h6>
    <% end %>
  </div>  
  <div id="search_nearest">
    <%= link_to "order by nearest", restaurants_path, style: "display:none;", id: "nearest_button" %>
  </div>
</header>


<article class = "restaurant-container">
  <% @restaurants.each do |restaurant| %>
    <div class = "restaurant" data-lat="<%= restaurant.lat %>" data-lon="<%= restaurant.lon %>" >
      <div class="title">
        <h6><%= restaurant.name %></h6> 
        <small style="font-weight: lighter;">City:</small>
        <small><%= restaurant.city %></small>
        <small class="distance" style="display: hidden;"></small>
      </div>
      <div>
        <% img = ["restaurants/restaurantWF.jpg", "restaurants/WH.jpg", "restaurants/kai.jpg", "restaurants/WF.jpg","restaurants/restaurant1.jpg","restaurants/restaurant2.jpg"].sample %>
        <% if restaurant.images.attached?  %>
          <%= image_tag restaurant.images.last, class: "img-fit pic-restaurant" %>
        <% else %>
          <%= image_tag img, class: "img-fit pic-restaurant" %>
        <% end %>
      </div>
      <%= link_to 'Interested', restaurant_path(restaurant), class: "interested" %>
    </div>
  <% end %>
</article>

</div>

<script>
  function getLocation() {
    if (navigator.geolocation) {
      console.log("inside geolocation check")
      navigator.geolocation.getCurrentPosition(showPosition);
    } else {
      console.log("Geolocation is not supported by this browser.");
    }
  }

  function showPosition(position) {
    console.log("given access to position")
    const user_lat = position.coords.latitude;
    const user_lon = position.coords.longitude;
    console.log(`lat: ${user_lat}; lat: ${user_lon}`)

    function distance(lat1, lon1, lat2, lon2, unit) {
      if ((lat1 == lat2) && (lon1 == lon2)) {
        return 0;
      }
      else {
        var radlat1 = Math.PI * lat1/180;
        var radlat2 = Math.PI * lat2/180;
        var theta = lon1-lon2;
        var radtheta = Math.PI * theta/180;
        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
        if (dist > 1) {
          dist = 1;
        }
        dist = Math.acos(dist);
        dist = dist * 180/Math.PI;
        dist = dist * 60 * 1.1515;
        if (unit=="K") { dist = dist * 1.609344 }
        if (unit=="N") { dist = dist * 0.8684 }
        return dist;
      }
    }

    const restaurants = $(".restaurant");
    restaurants.each(function(i, val) {
      const rest_lat = $(this).data("lat");
      const rest_lon = $(this).data("lon");
      if (rest_lat != "" && rest_lon != "") {
        $(this).find(".distance").css("display", "visible");
        $(this).find(".distance").text(`  / âœ¯ ${distance(rest_lat, rest_lon, user_lat, user_lon, "K").toFixed(2)} km away`);
      }
    });
    // make search by nearest visible and populate params
    const button = $("#nearest_button");
    button.attr("href", `${button.attr("href")}?lat=${user_lat}&lon=${user_lon}`);
    button.show();
  }
  console.log("about to ask for location")
  $(document).ready(getLocation());
</script>